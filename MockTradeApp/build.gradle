apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug_key.jks")
            storePassword "android"
            keyAlias "mocktrade"
            keyPassword "android"
        }

        release {
            storeFile file(System.getenv("com.balch.mocktrade.storeFile") ?: "../keystore/release_key.jks")
            storePassword System.getenv("com.balch.mocktrade.storePassword") ?: ""
            keyAlias System.getenv("com.balch.mocktrade.keyAlias") ?: ""
            keyPassword System.getenv("com.balch.mocktrade.keyPassword") ?: ""
        }
    }

    buildTypes {
        debug {
            // sign debug build with a common key to facilitate develop from multiple
            // computers w/o having to reinstall
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    flavorDimensions "basic"

    productFlavors {
        demo {
        }
        secret {
        }
    }

    packagingOptions{
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':MockTradeWear')
    compile project(':AppFramework')
    compile project(':MockTradeShared')

    compile "com.google.code.gson:gson:$gson"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_xcepter"

    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.retrofit2:converter-scalars:$retrofit"
    compile "io.reactivex.rxjava2:rxjava:$rxjava2"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroid"

    compile "android.arch.lifecycle:runtime:$android_arch"
    compile "android.arch.lifecycle:extensions:$android_arch"
    annotationProcessor "android.arch.lifecycle:compiler:$android_arch"

    compile "com.android.support:support-v4:$rootProject.ext.support"
    compile "com.android.support:appcompat-v7:$rootProject.ext.support"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.support"
    compile "com.android.support:cardview-v7:$rootProject.ext.support"
    compile "com.android.support:design:$rootProject.ext.support"
    compile "com.google.android.gms:play-services-wearable:$rootProject.ext.play_services"

    compile "net.danlew:android.joda:$joda"


    // Testing-only dependencies

    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    testCompile "com.android.support:support-annotations:$rootProject.ext.support"
    testCompile "com.android.support.test:runner:$rootProject.ext.support_test"
    testCompile "com.android.support.test:rules:$rootProject.ext.support_test"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockito"
}

